import SuggestionChip from "./suggestion-chip";
import { useLanguage } from "@/contexts/LanguageContext";

interface WelcomeMessageProps {
  onSuggestionClick: (text: string) => void;
}

const WelcomeMessage = ({ onSuggestionClick }: WelcomeMessageProps) => {
  const { t, language } = useLanguage();
  
  // Define language-specific suggestions
  const suggestionsByLanguage = {
    english: [
      "ЁЯТ╝ Job opportunities in tech industry",
      "ЁЯУЭ Resume building tips for women",
      "ЁЯФД Career transition planning",
      "ЁЯПв Job application procedures",
      "ЁЯСФ Interview preparation tips",
      "ЁЯСйтАНЁЯТ╝ Mentorship programs available",
      "ЁЯТ░ Salary negotiation strategies",
      "ЁЯМЯ Developing leadership skills"
    ],
    hindi: [
      "ЁЯТ╝ рддрдХрдиреАрдХреА рдЙрджреНрдпреЛрдЧ рдореЗрдВ рдиреМрдХрд░реА рдХреЗ рдЕрд╡рд╕рд░",
      "ЁЯУЭ рдорд╣рд┐рд▓рд╛рдУрдВ рдХреЗ рд▓рд┐рдП рд░рд┐рдЬреНрдпреВрдореЗ рдмрдирд╛рдиреЗ рдХреЗ рдЯрд┐рдкреНрд╕",
      "ЁЯФД рдХрд░рд┐рдпрд░ рдЯреНрд░рд╛рдВрдЬрд┐рд╢рди рдХреА рдпреЛрдЬрдирд╛",
      "ЁЯПв рдиреМрдХрд░реА рдЖрд╡реЗрджрди рдкреНрд░рдХреНрд░рд┐рдпрд╛рдПрдБ",
      "ЁЯСФ рдЗрдВрдЯрд░рд╡реНрдпреВ рддреИрдпрд╛рд░реА рдХреЗ рдЯрд┐рдкреНрд╕",
      "ЁЯСйтАНЁЯТ╝ рдЙрдкрд▓рдмреНрдз рдореЗрдВрдЯрд░рд╢рд┐рдк рдкреНрд░реЛрдЧреНрд░рд╛рдо",
      "ЁЯТ░ рд╕реИрд▓рд░реА рдиреЗрдЧреЛрд╢рд┐рдПрд╢рди рд░рдгрдиреАрддрд┐рдпрд╛рдБ",
      "ЁЯМЯ рд▓реАрдбрд░рд╢рд┐рдк рд╕реНрдХрд┐рд▓реНрд╕ рд╡рд┐рдХрд╕рд┐рдд рдХрд░рдирд╛"
    ],
    tamil: [
      "ЁЯТ╝ родрпКро┤ро┐ро▓рпНроирпБроЯрпНрокродрпН родрпБро▒рпИропро┐ро▓рпН ро╡рпЗро▓рпИ ро╡ро╛ропрпНрокрпНрокрпБроХро│рпН",
      "ЁЯУЭ рокрпЖрогрпНроХро│рпБроХрпНроХро╛рой ро░рпЖроЪрпБроорпЗ роЙро░рпБро╡ро╛роХрпНроХрпБроорпН роХрпБро▒ро┐рокрпНрокрпБроХро│рпН",
      "ЁЯФД ро╡рпЗро▓рпИ рооро╛ро▒рпНро▒родрпН родро┐роЯрпНроЯрооро┐роЯро▓рпН",
      "ЁЯПв ро╡рпЗро▓рпИ ро╡ро┐рогрпНрогрокрпНрок роироЯрпИроорпБро▒рпИроХро│рпН",
      "ЁЯСФ роирпЗро░рпНроХро╛рогро▓рпН родропро╛ро░ро┐рокрпНрокрпБ роХрпБро▒ро┐рокрпНрокрпБроХро│рпН",
      "ЁЯСйтАНЁЯТ╝ роХро┐роЯрпИроХрпНроХрпБроорпН ро╡ро┤ро┐роХро╛роЯрпНроЯро▓рпН родро┐роЯрпНроЯроЩрпНроХро│рпН",
      "ЁЯТ░ роЪроорпНрокро│ рокрпЗро░роорпН роЙродрпНродро┐роХро│рпН",
      "ЁЯМЯ родро▓рпИроорпИродрпНродрпБро╡ родро┐ро▒ройрпНроХро│рпИ ро╡ро│ро░рпНродрпНродро▓рпН"
    ],
    telugu: [
      "ЁЯТ╝ р░Яр▒Жр░Хр▒Н р░Зр░Вр░бр░╕р▒Нр░Яр▒Нр░░р▒Ар░▓р▒Л р░Йр░жр▒Нр░пр▒Лр░Ч р░Ер░╡р░Хр░╛р░╢р░╛р░▓р▒Б",
      "ЁЯУЭ р░ор░╣р░┐р░│р░▓р░Хр▒Б р░░р▒Жр░╕р▒Бр░ор▒Ж р░ир░┐р░░р▒Нр░ор░╛р░г р░Ър░┐р░Яр▒Нр░Хр░╛р░▓р▒Б",
      "ЁЯФД р░Хр▒Жр░░р▒Ар░░р▒Н р░ор░╛р░░р▒Нр░кр▒Б р░кр▒Нр░░р░гр░╛р░│р░┐р░Х",
      "ЁЯПв р░Йр░жр▒Нр░пр▒Лр░Ч р░жр░░р░Цр░╛р░╕р▒Нр░др▒Б р░╡р░┐р░зр░╛р░ир░╛р░▓р▒Б",
      "ЁЯСФ р░Зр░Вр░Яр░░р▒Нр░╡р▒Нр░пр▒В р░др░пр░╛р░░р▒А р░Ър░┐р░Яр▒Нр░Хр░╛р░▓р▒Б",
      "ЁЯСйтАНЁЯТ╝ р░Ер░Вр░жр▒Бр░мр░╛р░Яр▒Бр░▓р▒Л р░Йр░ир▒Нр░и р░ор▒Жр░Вр░Яр░░р▒НтАМр░╖р░┐р░кр▒Н р░кр▒Нр░░р▒Лр░Чр▒Нр░░р░╛р░ор▒НтАМр░▓р▒Б",
      "ЁЯТ░ р░Ьр▒Ар░др░В р░Ър░░р▒Нр░Ър░▓ р░╡р▒Нр░пр▒Вр░╣р░╛р░▓р▒Б",
      "ЁЯМЯ р░ир░╛р░пр░Хр░др▒Нр░╡ р░ир▒Ир░кр▒Бр░гр▒Нр░пр░╛р░▓р░ир▒Б р░кр▒Жр░Вр░кр▒Кр░Вр░жр░┐р░Вр░Ър░бр░В"
    ],
    kannada: [
      "ЁЯТ╝ р▓Яр│Жр▓Хр│Н р▓Зр▓Вр▓бр▓╕р│Нр▓Яр│Нр▓░р▓┐р▓пр▓▓р│Нр▓▓р▓┐ р▓Йр▓жр│Нр▓пр│Лр▓Ч р▓Ер▓╡р▓Хр▓╛р▓╢р▓Чр▓│р│Б",
      "ЁЯУЭ р▓ор▓╣р▓┐р▓│р│Жр▓пр▓░р▓┐р▓Чр│Ж р▓░р│Жр▓╕р│Нр▓пр│Бр▓ор│Ж р▓░р▓Ър▓┐р▓╕р│Бр▓╡ р▓Яр▓┐р▓кр│Нр▓╕р│Н",
      "ЁЯФД р▓╡р│Гр▓др│Нр▓др▓┐ р▓мр▓жр▓▓р▓╛р▓╡р▓гр│Ж р▓пр│Лр▓Ьр▓ир│Ж",
      "ЁЯПв р▓Йр▓жр│Нр▓пр│Лр▓Ч р▓Ер▓░р│Нр▓Ьр▓┐ р▓╡р▓┐р▓зр▓╛р▓ир▓Чр▓│р│Б",
      "ЁЯСФ р▓╕р▓Вр▓жр▓░р│Нр▓╢р▓и р▓др▓пр▓╛р▓░р▓┐ р▓Яр▓┐р▓кр│Нр▓╕р│Н",
      "ЁЯСйтАНЁЯТ╝ р▓▓р▓нр│Нр▓пр▓╡р▓┐р▓░р│Бр▓╡ р▓ор▓╛р▓░р│Нр▓Чр▓жр▓░р│Нр▓╢р▓и р▓Хр▓╛р▓░р│Нр▓пр▓Хр│Нр▓░р▓ор▓Чр▓│р│Б",
      "ЁЯТ░ р▓╕р▓Вр▓мр▓│ р▓╡р▓╛р▓Яр▓╛р▓Шр▓╛р▓Яр│Ж р▓др▓Вр▓др│Нр▓░р▓Чр▓│р│Б",
      "ЁЯМЯ р▓ир▓╛р▓пр▓Хр▓др│Нр▓╡ р▓Хр│Мр▓╢р▓▓р│Нр▓пр▓Чр▓│р▓ир│Нр▓ир│Б р▓мр│Жр▓│р│Жр▓╕р│Бр▓╡р│Бр▓жр│Б"
    ],
    bengali: [
      "ЁЯТ╝ ржЯрзЗржХ ржЗржирзНржбрж╛рж╕рзНржЯрзНрж░рж┐рждрзЗ ржЪрж╛ржХрж░рж┐рж░ рж╕рзБржпрзЛржЧ",
      "ЁЯУЭ ржорж╣рж┐рж▓рж╛ржжрзЗрж░ ржЬржирзНржп рж░рж┐ржЬрзБржорзЗ рждрзИрж░рж┐рж░ ржЯрж┐ржкрж╕",
      "ЁЯФД ржХрзНржпрж╛рж░рж┐ржпрж╝рж╛рж░ ржкрж░рж┐ржмрж░рзНрждржи ржкрж░рж┐ржХрж▓рзНржкржирж╛",
      "ЁЯПв ржЪрж╛ржХрж░рж┐ ржЖржмрзЗржжржи ржкржжрзНржзрждрж┐",
      "ЁЯСФ ржЗржирзНржЯрж╛рж░ржнрж┐ржЙ ржкрзНрж░рж╕рзНрждрзБрждрж┐ ржЯрж┐ржкрж╕",
      "ЁЯСйтАНЁЯТ╝ ржЙржкрж▓ржмрзНржз ржорзЗржирзНржЯрж░рж╢рж┐ржк ржкрзНрж░рзЛржЧрзНрж░рж╛ржо",
      "ЁЯТ░ ржмрзЗрждржи ржЖрж▓рзЛржЪржирж╛рж░ ржХрзМрж╢рж▓",
      "ЁЯМЯ ржирзЗрждрзГрждрзНржм ржжржХрзНрж╖рждрж╛ ржмрж┐ржХрж╛рж╢"
    ]
  };

  // Get suggestions based on current language
  const suggestions = suggestionsByLanguage[language] || suggestionsByLanguage.english;

  return (
    <div className="bg-gradient-to-r from-[#6A2C91]/10 to-[#6A2C91]/5 rounded-lg p-5 mb-3 max-w-lg shadow-sm">
      <div className="flex items-center gap-2 mb-3">
        <span className="text-xl">ЁЯЩПЁЯП╗</span>
        <h2 className="font-poppins font-semibold text-[#6A2C91] text-lg">
          {t('welcomeMessage').split(' ')[0]}
        </h2>
      </div>
      <p className="text-sm mb-4 leading-relaxed">
        {t('welcomeMessage')}
      </p>
      {/* Suggestion prompt text in different languages */}
      <p className="text-xs text-neutral-600 italic mb-3">
        {language === 'hindi' && "рдиреМрдХрд░реА рдХреЗ рдЕрд╡рд╕рд░реЛрдВ, рдЗрдВрдЯрд░рд╡реНрдпреВ рдЯрд┐рдкреНрд╕ рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдкреВрдЫреЗрдВ, рдпрд╛ рдиреАрдЪреЗ рджрд┐рдП рдЧрдП рд╕реБрдЭрд╛рд╡реЛрдВ рдореЗрдВ рд╕реЗ рдЪреБрдиреЗрдВ:"}
        {language === 'tamil' && "ро╡рпЗро▓рпИ ро╡ро╛ропрпНрокрпНрокрпБроХро│рпН, роирпЗро░рпНроХро╛рогро▓рпН роХрпБро▒ро┐рокрпНрокрпБроХро│рпН рокро▒рпНро▒ро┐ роХрпЗро│рпБроЩрпНроХро│рпН, роЕро▓рпНро▓родрпБ роХрпАро┤рпЗ роЙро│рпНро│ рокро░ро┐роирпНродрпБро░рпИроХро│ро┐ро▓ро┐ро░рпБроирпНродрпБ родрпЗро░рпНро╡рпБ роЪрпЖропрпНропро╡рпБроорпН:"}
        {language === 'telugu' && "р░Йр░жр▒Нр░пр▒Лр░Ч р░Ер░╡р░Хр░╛р░╢р░╛р░▓р▒Б, р░Зр░Вр░Яр░░р▒Нр░╡р▒Нр░пр▒В р░Ър░┐р░Яр▒Нр░Хр░╛р░▓ р░Чр▒Бр░░р░┐р░Вр░Ър░┐ р░Ер░бр░Чр░Вр░бр░┐, р░▓р▒Зр░жр░╛ р░Хр▒Нр░░р░┐р░Вр░ж р░╕р▒Вр░Ър░┐р░Вр░Ър░┐р░и р░╕р░▓р░╣р░╛р░▓р░▓р▒Л р░Ор░Вр░Ър▒Бр░Хр▒Лр░Вр░бр░┐:"}
        {language === 'kannada' && "р▓Йр▓жр│Нр▓пр│Лр▓Ч р▓Ер▓╡р▓Хр▓╛р▓╢р▓Чр▓│р│Б, р▓╕р▓Вр▓жр▓░р│Нр▓╢р▓и р▓Яр▓┐р▓кр│Нр▓╕р│Н р▓мр▓Чр│Нр▓Чр│Ж р▓Хр│Зр▓│р▓┐, р▓Ер▓ер▓╡р▓╛ р▓Хр│Жр▓│р▓Чр▓┐р▓и р▓╕р▓▓р▓╣р│Жр▓Чр▓│р▓┐р▓Вр▓ж р▓Жр▓пр│Нр▓Хр│Ж р▓ор▓╛р▓бр▓┐:"}
        {language === 'bengali' && "ржЪрж╛ржХрж░рж┐рж░ рж╕рзБржпрзЛржЧ, ржЗржирзНржЯрж╛рж░ржнрж┐ржЙ ржЯрж┐ржкрж╕ рж╕ржорзНржкрж░рзНржХрзЗ ржЬрж┐ржЬрзНржЮрж╛рж╕рж╛ ржХрж░рзБржи, ржЕржержмрж╛ ржирзАржЪрзЗрж░ ржкрж░рж╛ржорж░рзНрж╢ржЧрзБрж▓рж┐ ржерзЗржХрзЗ ржмрзЗржЫрзЗ ржирж┐ржи:"}
        {language === 'english' && "Try asking about job opportunities, interview tips, or choose from the suggestions below:"}
      </p>
      <div className="flex flex-wrap gap-2 mt-2">
        {suggestions.map((suggestion, index) => (
          <SuggestionChip 
            key={index} 
            text={suggestion} 
            onClick={() => onSuggestionClick(suggestion)} 
          />
        ))}
      </div>
    </div>
  );
};

export default WelcomeMessage;
